%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: Pynsist Configuration
file_extensions:
  - cfg
scope: source.cfg.pynsist
variables:
  nsis_variables: '(?i)\$(ADMINTOOLS|APPDATA|CDBURN_AREA|COMMONFILES|COOKIES|DESKTOP|DOCUMENTS|EXEDIR|FAVORITES|FONTS|HISTORY|INSTDIR|INTERNET_CACHE|LOCALAPPDATA|MUSIC|NETHOOD|OUTDIR|PICTURES|PLUGINSDIR|PRINTHOOD|PROFILE|PROGRAMFILES(32|64)?|QUICKLAUNCH|RECENT|RESOURCES_LOCALIZED|RESOURCES|SENDTO|SMPROGRAMS|SMSTARTUP|STARTMENU|SYSDIR|TEMP|TEMPLATES|VIDEOS|WINDIR)'
  nsis_constants: '(?i)\$(\{PRODUCT_NAME\})'
contexts:
  main:
    - match: ^\s*(;|#).*$\n?
      scope: comment.line.semicolon.pynsist
      captures:
        1: punctuation.definition.comment.pynsist
    - match: '{{nsis_variables}}'
      scope: variable.language.pynsist
    - match: '{{nsis_constants}}'
      scope: constant.language.pynsist
    - match: '((0(x|X)[0-9a-fA-F]{3,6})|([0-9]+(\.[0-9]+)*))\b'
      scope: constant.numeric.pynsist
    - match: (?i)\b(?<=\=)true\b
      scope: constant.language.boolean.true.pynsist
    - match: (?i)\b(?<=\=)false\b
      scope: constant.language.boolean.false.pynsist
    - match: (?i)\b(?<=format\=)bundled\b
      scope: constant.language.boolean.pynsist
    - match: '^\s*(\[)(.*?)(\])'
      scope: entity.name.section.pynsist
      captures:
        1: punctuation.definition.section.pynsist
        2: entity.section.pynsist
        3: punctuation.definition.section.pynsist
    - match: ^(\s*(["']?)(bitness|console|directory|entry_point|exclude|extra_preamble|files|format|icon|include_msvcrt|installer_name|license_file|local_wheels|name|nsi_template|packages|parameters|publisher|pypi_wheels|script|target|version)(\2)\s*)(?:=)
      scope: meta.declaration.pynsist
      captures:
        1: meta.property.pynsist
        2: punctuation.definition.quote.pynsist
        3: keyword.name.pynsist
        4: punctuation.definition.quote.pynsist
        5: punctuation.definition.equals.pynsist
        6: meta.value.pynsist
        7: punctuation.definition.quote.pynsist
        8: string.name.value.pynsist
        9: punctuation.definition.quote.pynsist
        10: comment.declarationline.semicolon.pynsist
        11: variable.language.pynsist
        12: constant.language.pynsist
    - match: '"'
      captures:
        0: punctuation.definition.string.begin.pynsist
      push:
        - meta_scope: string.quoted.double.pynsist
        - match: '"'
          captures:
            0: punctuation.definition.string.end.pynsist
          pop: true
        - match: '{{nsis_variables}}'
          scope: variable.language.pynsist
        - match: '{{nsis_constants}}'
          scope: constant.language.pynsist
    - match: "'"
      captures:
        0: punctuation.definition.string.begin.pynsist
      push:
        - meta_scope: string.quoted.single.pynsist
        - match: "'"
          captures:
            0: punctuation.definition.string.end.pynsist
          pop: true
        - match: '{{nsis_variables}}'
          scope: variable.language.pynsist
        - match: '{{nsis_constants}}'
          scope: constant.language.pynsist
